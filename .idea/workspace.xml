<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6dfda440-a30d-449b-8ac9-4670c9afae50" name="Changes" comment="Dockerfile update.">
      <change afterPath="$PROJECT_DIR$/mercurius" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/mercurius-client/publisher-client/mercurius-client.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/mercurius-client/publisher-client/mercurius-client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/mercurius-client/subscriber-client/mercurius-client-sub.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/mercurius-client/subscriber-client/mercurius-client-sub.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/broker/topic.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/broker/topic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/client/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/client/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/Event.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/proto/Event.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/Event.proto" beforeDir="false" afterPath="$PROJECT_DIR$/proto/Event.proto" afterDir="false" />
    </list>
    <list id="759ff373-b500-4aa5-a8e4-db5078eb5f97" name="do not commit" comment="" />
    <list id="5e459432-155c-4bd6-8f8b-4161478914c0" name="test" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../linuxbrew/.linuxbrew/Cellar/go/1.20.4/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="retry-queue" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="01a072fe-f526-4ec5-b9b9-8df898e59075" />
        <option name="url" value="https://github.com/ispiroglu/mercurius.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2MyKUDNTm10PgXtHNODlXwaRWIB" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go Application&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/xpirr/GolandProjects/final-report-comparisons/http-example&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/../final-report-comparisons/kafka-example/src/subscriber" />
      <recent name="$PROJECT_DIR$/cmd/mercurius-client/sub" />
      <recent name="$PROJECT_DIR$/cmd/mercurius-client/pub" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build kafka-example/publisher">
    <configuration name="go build github.com/ispiroglu/mercurius/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="mercurius" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ispiroglu/mercurius/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/demo.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build kafka-example/publisher" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="kafka-example" />
      <working_directory value="$PROJECT_DIR$/../final-report-comparisons/kafka-example/src" />
      <kind value="PACKAGE" />
      <package value="kafka-example/publisher" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/../final-report-comparisons/kafka-example/src/publisher/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build kafka-example/subscriber" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="kafka-example" />
      <working_directory value="$PROJECT_DIR$/../final-report-comparisons/kafka-example/src" />
      <kind value="PACKAGE" />
      <package value="kafka-example/subscriber" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/../final-report-comparisons/kafka-example/src/subscriber/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build mercurius.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="mercurius" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/mercurius/mercurius.go" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build kafka-example/publisher" />
        <item itemvalue="Go Build.go build kafka-example/subscriber" />
        <item itemvalue="Go Build.go build mercurius.go" />
        <item itemvalue="Go Build.go build github.com/ispiroglu/mercurius/cmd" />
        <item itemvalue="Docker.Dockerfile" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
        <option value="Space.CommitStatus" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="implemented Publish functionality in basic form" />
    <MESSAGE value="GitHub actions updates." />
    <MESSAGE value="add abstraction between service and broker layers." />
    <MESSAGE value="added basic subscriber model and logic." />
    <MESSAGE value="GitHub actions update." />
    <MESSAGE value="lint fixes." />
    <MESSAGE value="issuer fix" />
    <MESSAGE value="issuer revert" />
    <MESSAGE value="Implement basic broker functionality" />
    <MESSAGE value="MEC-3 Implemented publish and subscribe functionality to already subscribed" />
    <MESSAGE value="MEC-3 golangcli-linter fixes" />
    <MESSAGE value="MEC-11 add zap for logging" />
    <MESSAGE value="github golanci-linter version fix" />
    <MESSAGE value="MEC-13 Implement Idle event channel." />
    <MESSAGE value="MEC-2 Remove some comments and add interfaces for mocking" />
    <MESSAGE value="performs high concurrency" />
    <MESSAGE value="performs high concurrency with unbuffered channels." />
    <MESSAGE value="code style fix" />
    <MESSAGE value="concurrent publish fix" />
    <MESSAGE value="linter fix" />
    <MESSAGE value="New Client Implementations and Retry Queue In Internal Server Error" />
    <MESSAGE value="Dockerfile update." />
    <option name="LAST_COMMIT_MESSAGE" value="Dockerfile update." />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>