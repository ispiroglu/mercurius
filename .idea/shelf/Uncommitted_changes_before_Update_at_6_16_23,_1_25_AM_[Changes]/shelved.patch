Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"ALL\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"6dfda440-a30d-449b-8ac9-4670c9afae50\" name=\"Changes\" comment=\"linter fix\">\n      <change afterPath=\"$PROJECT_DIR$/cmd/mercurius-client/publisher-client/mercurius-client.go\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/cmd/mercurius-client/subscriber-client/mercurius-client-sub.go\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/cmd/mercurius-client/mercurius-client.go\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/cmd/mercurius/mercurius.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmd/mercurius/mercurius.go\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/internal/broker/broker.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/internal/broker/broker.go\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/internal/broker/topic.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/internal/broker/topic.go\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/internal/server/server.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/internal/server/server.go\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/pkg/serialize/serialize.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pkg/serialize/serialize.go\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/proto/Event.pb.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/proto/Event.pb.go\" afterDir=\"false\" />\n    </list>\n    <list id=\"759ff373-b500-4aa5-a8e4-db5078eb5f97\" name=\"do not commit\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/.scannerwork/.sonar_lock\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.scannerwork/scanner-report/analysis.log\" afterDir=\"false\" />\n    </list>\n    <list id=\"5e459432-155c-4bd6-8f8b-4161478914c0\" name=\"test\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Go File\" />\n        <option value=\"Go Application\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"GOROOT\" url=\"file://$PROJECT_DIR$/../../../linuxbrew/.linuxbrew/Cellar/go/1.20.1/libexec\" />\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"high-concurrency-fix\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"01a072fe-f526-4ec5-b9b9-8df898e59075\" />\n        <option name=\"url\" value=\"https://github.com/ispiroglu/mercurius.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2MyKUDNTm10PgXtHNODlXwaRWIB\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;DefaultGoTemplateProperty&quot;: &quot;Go Application&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,\n    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/home/xpirr/GolandProjects/mercurius&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.new.ui&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/cmd/mercurius-client/sub\" />\n      <recent name=\"$PROJECT_DIR$/cmd/mercurius-client/pub\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Go Build.go build mercurius.go\">\n    <configuration default=\"true\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\">\n      <module name=\"mercurius\" />\n      <working_directory value=\"$PROJECT_DIR$\" />\n      <go_parameters value=\"-i\" />\n      <kind value=\"FILE\" />\n      <directory value=\"$PROJECT_DIR$\" />\n      <filePath value=\"$PROJECT_DIR$\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"go build github.com/ispiroglu/mercurius/cmd\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mercurius\" />\n      <working_directory value=\"$PROJECT_DIR$\" />\n      <kind value=\"PACKAGE\" />\n      <package value=\"github.com/ispiroglu/mercurius/cmd\" />\n      <directory value=\"$PROJECT_DIR$\" />\n      <filePath value=\"$PROJECT_DIR$/cmd/demo.go\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"go build mercurius.go\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"mercurius\" />\n      <working_directory value=\"$PROJECT_DIR$\" />\n      <kind value=\"FILE\" />\n      <directory value=\"$PROJECT_DIR$\" />\n      <filePath value=\"$PROJECT_DIR$/cmd/mercurius/mercurius.go\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration default=\"true\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\">\n      <module name=\"mercurius\" />\n      <working_directory value=\"$PROJECT_DIR$\" />\n      <go_parameters value=\"-i\" />\n      <kind value=\"DIRECTORY\" />\n      <directory value=\"$PROJECT_DIR$\" />\n      <filePath value=\"$PROJECT_DIR$\" />\n      <framework value=\"gotest\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Dockerfile\" type=\"docker-deploy\" factoryName=\"dockerfile\" temporary=\"true\" server-name=\"Docker\">\n      <deployment type=\"dockerfile\">\n        <settings>\n          <option name=\"containerName\" value=\"\" />\n          <option name=\"sourceFilePath\" value=\"Dockerfile\" />\n        </settings>\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"dockerfile\" temporary=\"true\">\n      <deployment type=\"dockerfile\">\n        <settings />\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Docker.Dockerfile\" />\n        <item itemvalue=\"Go Build.go build mercurius.go\" />\n        <item itemvalue=\"Go Build.go build github.com/ispiroglu/mercurius/cmd\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n        <option value=\"Space.CommitStatus\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"implemented Publish functionality in basic form\" />\n    <MESSAGE value=\"GitHub actions updates.\" />\n    <MESSAGE value=\"add abstraction between service and broker layers.\" />\n    <MESSAGE value=\"added basic subscriber model and logic.\" />\n    <MESSAGE value=\"GitHub actions update.\" />\n    <MESSAGE value=\"lint fixes.\" />\n    <MESSAGE value=\"issuer fix\" />\n    <MESSAGE value=\"issuer revert\" />\n    <MESSAGE value=\"Implement basic broker functionality\" />\n    <MESSAGE value=\"MEC-3 Implemented publish and subscribe functionality to already subscribed\" />\n    <MESSAGE value=\"MEC-3 golangcli-linter fixes\" />\n    <MESSAGE value=\"MEC-11 add zap for logging\" />\n    <MESSAGE value=\"github golanci-linter version fix\" />\n    <MESSAGE value=\"MEC-13 Implement Idle event channel.\" />\n    <MESSAGE value=\"MEC-2 Remove some comments and add interfaces for mocking\" />\n    <MESSAGE value=\"performs high concurrency\" />\n    <MESSAGE value=\"performs high concurrency with unbuffered channels.\" />\n    <MESSAGE value=\"code style fix\" />\n    <MESSAGE value=\"concurrent publish fix\" />\n    <MESSAGE value=\"linter fix\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"linter fix\" />\n  </component>\n  <component name=\"VgoProject\">\n    <settings-migrated>true</settings-migrated>\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"DlvLineBreakpoint\">\n          <url>file://$PROJECT_DIR$/internal/server/server.go</url>\n          <option name=\"timeStamp\" value=\"10\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 712d9159f05a611f7d201d83eef5709d4bf92254)
+++ b/.idea/workspace.xml	(date 1686867561866)
@@ -4,21 +4,15 @@
     <option name="autoReloadType" value="ALL" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6dfda440-a30d-449b-8ac9-4670c9afae50" name="Changes" comment="linter fix">
-      <change afterPath="$PROJECT_DIR$/cmd/mercurius-client/publisher-client/mercurius-client.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/cmd/mercurius-client/subscriber-client/mercurius-client-sub.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmd/mercurius-client/mercurius-client.go" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmd/mercurius/mercurius.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/mercurius/mercurius.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/internal/broker/broker.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/broker/broker.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/internal/broker/topic.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/broker/topic.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/internal/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/server/server.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pkg/serialize/serialize.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/serialize/serialize.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/proto/Event.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/proto/Event.pb.go" afterDir="false" />
-    </list>
-    <list id="759ff373-b500-4aa5-a8e4-db5078eb5f97" name="do not commit" comment="">
-      <change afterPath="$PROJECT_DIR$/.scannerwork/.sonar_lock" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.scannerwork/scanner-report/analysis.log" afterDir="false" />
+    <list default="true" id="6dfda440-a30d-449b-8ac9-4670c9afae50" name="Changes" comment="TODOs">
+      <change afterPath="$PROJECT_DIR$/mercurius" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pkg/client/client.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pkg/client/grpc_dial.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/publisher-client" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/subscriber-client" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
+    <list id="759ff373-b500-4aa5-a8e4-db5078eb5f97" name="do not commit" comment="" />
     <list id="5e459432-155c-4bd6-8f8b-4161478914c0" name="test" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -33,11 +27,11 @@
       </list>
     </option>
   </component>
-  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../linuxbrew/.linuxbrew/Cellar/go/1.20.1/libexec" />
+  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../linuxbrew/.linuxbrew/Cellar/go/1.20.4/libexec" />
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="high-concurrency-fix" />
+        <entry key="$PROJECT_DIR$" value="master" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -67,26 +61,26 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;DefaultGoTemplateProperty&quot;: &quot;Go Application&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
-    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/home/xpirr/GolandProjects/mercurius&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.new.ui&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ASKED_ADD_EXTERNAL_FILES": "true",
+    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "DefaultGoTemplateProperty": "Go Application",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.go.formatter.settings.were.checked": "true",
+    "RunOnceActivity.go.migrated.go.modules.settings": "true",
+    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "retry-queue",
+    "go.import.settings.migrated": "true",
+    "go.sdk.automatically.set": "true",
+    "last_opened_file_path": "/home/xpirr/GolandProjects/sample-mercurius",
+    "node.js.detected.package.eslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "settings.editor.selected.configurable": "reference.settings.ide.settings.new.ui"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/cmd/mercurius-client/sub" />
@@ -94,15 +88,6 @@
     </key>
   </component>
   <component name="RunManager" selected="Go Build.go build mercurius.go">
-    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
-      <module name="mercurius" />
-      <working_directory value="$PROJECT_DIR$" />
-      <go_parameters value="-i" />
-      <kind value="FILE" />
-      <directory value="$PROJECT_DIR$" />
-      <filePath value="$PROJECT_DIR$" />
-      <method v="2" />
-    </configuration>
     <configuration name="go build github.com/ispiroglu/mercurius/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
       <module name="mercurius" />
       <working_directory value="$PROJECT_DIR$" />
@@ -118,16 +103,6 @@
       <kind value="FILE" />
       <directory value="$PROJECT_DIR$" />
       <filePath value="$PROJECT_DIR$/cmd/mercurius/mercurius.go" />
-      <method v="2" />
-    </configuration>
-    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
-      <module name="mercurius" />
-      <working_directory value="$PROJECT_DIR$" />
-      <go_parameters value="-i" />
-      <kind value="DIRECTORY" />
-      <directory value="$PROJECT_DIR$" />
-      <filePath value="$PROJECT_DIR$" />
-      <framework value="gotest" />
       <method v="2" />
     </configuration>
     <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
@@ -147,9 +122,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Go Build.go build mercurius.go" />
+        <item itemvalue="Go Build.go build github.com/ispiroglu/mercurius/cmd" />
+        <item itemvalue="Docker.Dockerfile" />
         <item itemvalue="Docker.Dockerfile" />
         <item itemvalue="Go Build.go build mercurius.go" />
-        <item itemvalue="Go Build.go build github.com/ispiroglu/mercurius/cmd" />
       </list>
     </recent_temporary>
   </component>
@@ -206,14 +183,4 @@
   <component name="VgoProject">
     <settings-migrated>true</settings-migrated>
   </component>
-  <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
-          <url>file://$PROJECT_DIR$/internal/server/server.go</url>
-          <option name="timeStamp" value="10" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
-  </component>
 </project>
\ No newline at end of file
Index: pkg/client/client.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/client/client.go b/pkg/client/client.go
new file mode 100644
--- /dev/null	(date 1686867845138)
+++ b/pkg/client/client.go	(date 1686867845138)
@@ -0,0 +1,120 @@
+package client
+
+import (
+	"context"
+	"errors"
+	"fmt"
+	"github.com/google/uuid"
+	"github.com/ispiroglu/mercurius/internal/logger"
+	"github.com/ispiroglu/mercurius/pkg/serialize"
+	"github.com/ispiroglu/mercurius/proto"
+
+	"go.uber.org/zap"
+	"google.golang.org/protobuf/types/known/timestamppb"
+)
+
+type Client struct {
+	Name string
+	c    proto.MercuriusClient
+	s    *serialize.Serializer
+}
+
+var l = logger.NewLogger()
+
+// Where to locate defer conn.Close()
+func NewClient(name string, addr string) (*Client, error) {
+	conn := getConnection(addr)
+	if conn == nil {
+		l.Error("could not Create a connection")
+		return nil, errors.New("could not Create a connection")
+	}
+
+	c := proto.NewMercuriusClient(conn)
+	l.Info("Created the client")
+
+	return &Client{
+		c:    c,
+		Name: name,
+		s:    serialize.NewSerializer(),
+	}, nil
+}
+
+func (client *Client) Subscribe(topicName string, ctx context.Context, fn func(event *proto.Event) error) error {
+	r := client.createSubRequest(topicName)
+	subStream, err := client.c.Subscribe(ctx, r)
+	if err != nil {
+		return err
+	}
+
+	go func() {
+		for {
+			e, err := subStream.Recv()
+			if err != nil {
+				// TODO: What if cannot receive?
+				continue
+			}
+
+			l.Info("Received Event", zap.String("Client", client.Name), zap.String("Topic", e.Topic))
+			err = fn(e)
+			if err != nil {
+				_ = client.retry(ctx, e, r.SubscriberID)
+			}
+		}
+	}()
+
+	return nil
+}
+
+func (client *Client) Publish(topicName string, body any, ctx context.Context) error {
+	e, err := client.createEvent(topicName, body)
+	if err != nil {
+		return err
+	}
+
+	ack, err := client.c.Publish(ctx, e)
+	if err != nil || ack != nil {
+		return err
+	}
+
+	return nil
+}
+
+func (client *Client) retry(ctx context.Context, e *proto.Event, subId string) error {
+	r := &proto.RetryRequest{
+		SubscriberID: subId,
+		Event:        e,
+		CreatedAt:    timestamppb.Now(),
+	}
+	ack, err := client.c.Retry(ctx, r)
+	if err != nil || ack != nil {
+		return err
+	}
+
+	return nil
+}
+
+func (client *Client) createSubRequest(topicName string) *proto.SubscribeRequest {
+	return &proto.SubscribeRequest{
+		SubscriberID:   uuid.NewString(),
+		SubscriberName: fmt.Sprint("%s:%s", client.Name, topicName),
+		Topic:          topicName,
+		CreatedAt:      timestamppb.Now(),
+	}
+}
+
+func (client *Client) createEvent(topicName string, body any) (*proto.Event, error) {
+	b, err := client.s.Encode(body)
+	if err != nil {
+		l.Error("error while encoding the event", zap.Any("Event", body), zap.Error(err))
+		return nil, errors.New("error while encoding the event")
+	}
+	e := proto.Event{
+		Id:        uuid.NewString(),
+		Topic:     topicName,
+		Body:      b,
+		CreatedAt: timestamppb.Now(),
+		ExpiresAt: 0, // TODO:
+	}
+
+	return &e, nil
+}
Index: pkg/client/grpc_dial.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/client/grpc_dial.go b/pkg/client/grpc_dial.go
new file mode 100644
--- /dev/null	(date 1686860986592)
+++ b/pkg/client/grpc_dial.go	(date 1686860986592)
@@ -0,0 +1,25 @@
+package client
+
+import (
+	"google.golang.org/grpc"
+	"google.golang.org/grpc/credentials/insecure"
+	"sync"
+)
+
+var (
+	conn *grpc.ClientConn
+	o    sync.Once
+)
+
+func getConnection(addr string) *grpc.ClientConn {
+	o.Do(func() {
+		c, err := grpc.Dial(addr, grpc.WithTransportCredentials(insecure.NewCredentials()))
+		if err != nil {
+			conn = nil
+		} else {
+			conn = c
+		}
+	})
+
+	return conn
+}
